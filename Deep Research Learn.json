{"createdAt":"2025-05-14T11:58:30.790Z","updatedAt":"2025-06-04T13:43:37.000Z","id":"GX1iliAidiNstBdE","name":"Deep Research Learn","active":false,"nodes":[{"parameters":{"schemaType":"manual","inputSchema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"learnings\": {\n      \"type\": \"array\",\n      \"description\": \"List of learnings\",\n      \"items\": { \"type\": \"string\" }\n    },\n    \"followUpQuestions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"List of follow-up questions to research the topic further, max of 3.\"\n      }\n    }\n  }\n}"},"id":"2f8681c8-2c5a-4910-9224-e7169d04620f","name":"Structured Output Parser","type":"@n8n/n8n-nodes-langchain.outputParserStructured","position":[3540,2180],"typeVersion":1.2},{"parameters":{"promptType":"define","text":"=Given the following prompt from the user, generate a list of SERP queries to research the topic.\nReduce the number of words in each query to its keywords only.\nReturn a maximum of {{ $('Execution Data').first().json.data.breadth }} queries, but feel free to return less if the original prompt is clear. Make sure each query is unique and not similar to each other: <prompt>{{ $('Execution Data').first().json.data.query.trim() }}</prompt>\n\n{{\n$('Execution Data').first().json.data.learnings.length\n  ? `Here are some learnings from previous research, use them to generate more specific queries:\\n${$('Execution Data').first().json.data.learnings.map(text => `* ${text}`).join('\\n')}`\n  : ''\n}}","hasOutputParser":true,"messages":{"messageValues":[{"message":"=You are an expert researcher. Today is {{ $now.toLocaleString() }}. Follow these instructions when responding:\n  - You may be asked to research subjects that is after your knowledge cutoff, assume the user is right when presented with news.\n  - The user is a highly experienced analyst, no need to simplify it, be as detailed as possible and make sure your response is correct.\n  - Be highly organized.\n  - Suggest solutions that I didn't think about.\n  - Be proactive and anticipate my needs.\n  - Treat me as an expert in all subject matter.\n  - Mistakes erode my trust, so be accurate and thorough.\n  - Provide detailed explanations, I'm comfortable with lots of detail.\n  - Value good arguments over authorities, the source is irrelevant.\n  - Consider new technologies and contrarian ideas, not just the conventional wisdom.\n  - You may use high levels of speculation or prediction, just flag it for me."}]}},"id":"2c751915-7f17-41af-be95-c80f9d8ac19b","name":"Generate SERP Queries","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[1460,1960],"typeVersion":1.5,"retryOnFail":false,"onError":"continueErrorOutput"},{"parameters":{"schemaType":"manual","inputSchema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"queries\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The SERP query\"\n          },\n          \"researchGoal\": {\n            \"type\": \"string\",\n            \"description\": \"First talk about the goal of the research that this query is meant to accomplish, then go deeper into how to advance the research once the results are found, mention additional research directions. Be as specific as possible, especially for additional research directions.\"\n          }\n        }\n      }\n    }\n  }\n}"},"id":"278aa718-b6fe-431d-bf57-afe32fe1c22f","name":"Structured Output Parser2","type":"@n8n/n8n-nodes-langchain.outputParserStructured","position":[1640,2200],"typeVersion":1.2},{"parameters":{"fieldToSplitOut":"output.queries","options":{}},"id":"c1b2b512-522e-4eb4-8486-5dadb0022b60","name":"SERP to Items","type":"n8n-nodes-base.splitOut","position":[2220,1940],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"9acec2cc-64c8-4e62-bed4-c3d9ffab1379","name":"researchGoal","type":"string","value":"={{ $('Item Ref').first().json.researchGoal }}"},{"id":"1b2d2dad-429b-4fc9-96c5-498f572a85c3","name":"learnings","type":"array","value":"={{ $json.output.learnings }}"},{"id":"7025f533-02ab-4031-9413-43390fb61f05","name":"followUpQuestions","type":"string","value":"={{ $json.output.followUpQuestions }}"},{"id":"c9e34ea4-5606-46d6-8d66-cb42d772a8b4","name":"urls","type":"array","value":"={{ $('Get Markdown + URL').first().json.urls }}"}]},"options":{}},"id":"2fdebc5d-fad0-4605-942a-c8ba6357b52b","name":"Research Goal + Learnings","type":"n8n-nodes-base.set","position":[4480,2500],"typeVersion":3.4},{"parameters":{"options":{}},"id":"b6a7c1ae-26a5-402c-bb91-0eb0f6d2cb15","name":"For Each Query...","type":"n8n-nodes-base.splitInBatches","position":[2580,1940],"typeVersion":3},{"parameters":{"workflowInputs":{"values":[{"name":"requestId","type":"any"},{"name":"data","type":"object"}]}},"id":"ed6e19b9-bb2a-4533-8928-736a9d172466","name":"DeepResearch Subworkflow","type":"n8n-nodes-base.executeWorkflowTrigger","position":[920,1960],"typeVersion":1.1},{"parameters":{"dataToSave":{"values":[{"key":"requestId","value":"={{ $json.requestId }}"}]}},"id":"3ada2946-3273-43b1-863e-d01c3beaf4de","name":"Execution Data","type":"n8n-nodes-base.executionData","position":[1180,1960],"typeVersion":1},{"parameters":{"promptType":"define","text":"=Given the following contents from a SERP search for the query <query>{{ $('Item Ref').first().json.query }}</query>, generate a list of learnings from the contents. Make sure each learning is unique and not similar to each other. The learnings should be concise and to the point, as detailed and infromation dense as possible. Make sure to include any entities like people, places, companies, products, things, etc in the learnings, as well as any exact metrics, numbers, or dates. The learnings will be used to research the topic \"{{ $('Execution Data').first().json.data.query.trim() }}\" further.\n\n<contents>\n{{\n$json.contents.map(item =>`<content>\\n${item.substr(0, 25_000)}\\n</content>`)\n  .join('\\n')\n}}\n</contents>","hasOutputParser":true,"messages":{"messageValues":[{"message":"=You are an expert researcher. Today is {{ $now.toLocaleString() }}. Follow these instructions when responding:\n  - You may be asked to research subjects that is after your knowledge cutoff, assume the user is right when presented with news.\n  - The user is a highly experienced analyst, no need to simplify it, be as detailed as possible and make sure your response is correct.\n  - Be highly organized.\n  - Suggest solutions that I didn't think about.\n  - Be proactive and anticipate my needs.\n  - Treat me as an expert in all subject matter.\n  - Mistakes erode my trust, so be accurate and thorough.\n  - Provide detailed explanations, I'm comfortable with lots of detail.\n  - Value good arguments over authorities, the source is irrelevant.\n  - Consider new technologies and contrarian ideas, not just the conventional wisdom.\n  - You may use high levels of speculation or prediction, just flag it for me."}]}},"id":"89df12ff-a8cc-4ec9-8234-f6f217abf616","name":"DeepResearch Learnings","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[3360,1960],"executeOnce":false,"typeVersion":1.5,"retryOnFail":false,"alwaysOutputData":false,"onError":"continueErrorOutput"},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"id":"9e27182c-8b0e-479a-a1c0-c71012801787","name":"Combine & Send back to Loop","type":"n8n-nodes-base.aggregate","position":[2840,1560],"typeVersion":1},{"parameters":{"model":{"__rl":true,"value":"gemini-2.0-flash","mode":"list","cachedResultName":"gemini-2.0-flash"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1460,2200],"id":"a5c7c934-1352-4861-a696-61508473e3a2","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"ZtquqVbSZYmpp9BK","name":"Gemini OpenAI"}}},{"parameters":{"model":{"__rl":true,"value":"gemini-2.0-flash","mode":"list","cachedResultName":"gemini-2.0-flash"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[3360,2180],"id":"9717120e-f23e-4a63-8483-e96146b43453","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"ZtquqVbSZYmpp9BK","name":"Gemini OpenAI"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2840,1960],"id":"29fb61f1-3069-48a0-bc95-0d2c251834bb","name":"Item Ref"},{"parameters":{"jsonSchemaExample":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"queries\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The SERP query\"\n          },\n          \"researchGoal\": {\n            \"type\": \"string\",\n            \"description\": \"First talk about the goal of the research that this query is meant to accomplish, then go deeper into how to advance the research once the results are found, mention additional research directions. Be as specific as possible, especially for additional research directions.\"\n          }\n        }\n      }\n    }\n  }\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[2000,2540],"id":"c3b7b6c0-071d-4b3a-a33a-9853e9110321","name":"Structured Output Parser1"},{"parameters":{"model":"deepseek/deepseek-chat:free","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[1840,2540],"id":"92074ae4-be46-40c8-b927-2f0680a004ba","name":"OpenRouter Chat Model","credentials":{"openRouterApi":{"id":"oTFyd3SVcT8EVg5h","name":"OpenRouter account"}}},{"parameters":{"promptType":"define","text":"=Given the following prompt from the user, generate a list of SERP queries to research the topic.\nReduce the number of words in each query to its keywords only.\nReturn a maximum of {{ $('Execution Data').first().json.data.breadth }} queries, but feel free to return less if the original prompt is clear. Make sure each query is unique and not similar to each other: <prompt>{{ $('Execution Data').first().json.data.query.trim() }}</prompt>\n\n{{\n$('Execution Data').first().json.data.learnings.length\n  ? `Here are some learnings from previous research, use them to generate more specific queries:\\n${$('Execution Data').first().json.data.learnings.map(text => `* ${text}`).join('\\n')}`\n  : ''\n}}","hasOutputParser":true,"messages":{"messageValues":[{"message":"=You are an expert researcher. Today is {{ $now.toLocaleString() }}. Follow these instructions when responding:   - You may be asked to research subjects that is after your knowledge cutoff, assume the user is right when presented with news.   - The user is a highly experienced analyst, no need to simplify it, be as detailed as possible and make sure your response is correct.   - Be highly organized.   - Suggest solutions that I didn't think about.   - Be proactive and anticipate my needs.   - Treat me as an expert in all subject matter.   - Mistakes erode my trust, so be accurate and thorough.   - Provide detailed explanations, I'm comfortable with lots of detail.   - Value good arguments over authorities, the source is irrelevant.   - Consider new technologies and contrarian ideas, not just the conventional wisdom.   - You may use high levels of speculation or prediction, just flag it for me."}]}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.6,"position":[1840,2320],"id":"07bb74dd-9cb9-4aa6-a5a5-80c344a95c7b","name":"Deepseek Generate SERP Queries"},{"parameters":{"model":"deepseek/deepseek-chat:free","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[3760,2440],"id":"0fdf733a-786a-49fe-93a3-91eef577bded","name":"OpenRouter Chat Model1","credentials":{"openRouterApi":{"id":"oTFyd3SVcT8EVg5h","name":"OpenRouter account"}}},{"parameters":{"jsonSchemaExample":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"learnings\": {\n      \"type\": \"array\",\n      \"description\": \"List of learnings\",\n      \"items\": { \"type\": \"string\" }\n    },\n    \"followUpQuestions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\",\n        \"description\": \"List of follow-up questions to research the topic further, max of 3.\"\n      }\n    }\n  }\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[3940,2440],"id":"6cc632bc-dcf8-4641-aee1-cd52a73a6fe5","name":"Structured Output Parser3"},{"parameters":{"promptType":"define","text":"=Given the following contents from a SERP search for the query <query>{{ $('Item Ref').first().json.query }}</query>, generate a list of learnings from the contents. Make sure each learning is unique and not similar to each other. The learnings should be concise and to the point, as detailed and infromation dense as possible. Make sure to include any entities like people, places, companies, products, things, etc in the learnings, as well as any exact metrics, numbers, or dates. The learnings will be used to research the topic \"{{ $('Execution Data').first().json.data.query.trim() }}\" further.\n\n<contents>\n{{\n$json.contents.map(item =>`<content>\\n${item.substr(0, 25_000)}\\n</content>`)\n  .join('\\n')\n}}\n</contents>","hasOutputParser":true,"messages":{"messageValues":[{"message":"=You are an expert researcher. Today is {{ $now.toLocaleString() }}. Follow these instructions when responding:   - You may be asked to research subjects that is after your knowledge cutoff, assume the user is right when presented with news.   - The user is a highly experienced analyst, no need to simplify it, be as detailed as possible and make sure your response is correct.   - Be highly organized.   - Suggest solutions that I didn't think about.   - Be proactive and anticipate my needs.   - Treat me as an expert in all subject matter.   - Mistakes erode my trust, so be accurate and thorough.   - Provide detailed explanations, I'm comfortable with lots of detail.   - Value good arguments over authorities, the source is irrelevant.   - Consider new technologies and contrarian ideas, not just the conventional wisdom.   - You may use high levels of speculation or prediction, just flag it for me."}]}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.6,"position":[3760,2240],"id":"230079db-cb9a-4302-a203-80f8318803ae","name":"Deepseek DeepResearch Learnings"},{"parameters":{"workflowId":{"__rl":true,"value":"sCTRsDMKLWLgF65d","mode":"list","cachedResultName":"Search Then Crawl"},"workflowInputs":{"mappingMode":"defineBelow","value":{"query":"={{ $json.query }}","channel":"Default"},"matchingColumns":[],"schema":[{"id":"query","displayName":"query","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"channel","displayName":"channel","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[3080,1960],"id":"76e9f46b-1502-45b7-92e5-dcb6a0650f56","name":"Search Then Crawl Workflow"}],"connections":{"SERP to Items":{"main":[[{"node":"For Each Query...","type":"main","index":0}]]},"Execution Data":{"main":[[{"node":"Generate SERP Queries","type":"main","index":0}]]},"For Each Query...":{"main":[[{"node":"Combine & Send back to Loop","type":"main","index":0}],[{"node":"Item Ref","type":"main","index":0}]]},"Generate SERP Queries":{"main":[[{"node":"SERP to Items","type":"main","index":0}],[{"node":"Deepseek Generate SERP Queries","type":"main","index":0}]]},"DeepResearch Learnings":{"main":[[{"node":"Research Goal + Learnings","type":"main","index":0}],[{"node":"Deepseek DeepResearch Learnings","type":"main","index":0}]]},"DeepResearch Subworkflow":{"main":[[{"node":"Execution Data","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"DeepResearch Learnings","type":"ai_outputParser","index":0}]]},"Research Goal + Learnings":{"main":[[{"node":"For Each Query...","type":"main","index":0}]]},"Structured Output Parser2":{"ai_outputParser":[[{"node":"Generate SERP Queries","type":"ai_outputParser","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Generate SERP Queries","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"DeepResearch Learnings","type":"ai_languageModel","index":0}]]},"Item Ref":{"main":[[{"node":"Search Then Crawl Workflow","type":"main","index":0}]]},"Structured Output Parser1":{"ai_outputParser":[[{"node":"Deepseek Generate SERP Queries","type":"ai_outputParser","index":0}]]},"OpenRouter Chat Model":{"ai_languageModel":[[{"node":"Deepseek Generate SERP Queries","type":"ai_languageModel","index":0}]]},"Deepseek Generate SERP Queries":{"main":[[{"node":"SERP to Items","type":"main","index":0}]]},"OpenRouter Chat Model1":{"ai_languageModel":[[{"node":"Deepseek DeepResearch Learnings","type":"ai_languageModel","index":0}]]},"Structured Output Parser3":{"ai_outputParser":[[{"node":"Deepseek DeepResearch Learnings","type":"ai_outputParser","index":0}]]},"Deepseek DeepResearch Learnings":{"main":[[{"node":"Research Goal + Learnings","type":"main","index":0}]]},"Search Then Crawl Workflow":{"main":[[{"node":"DeepResearch Learnings","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"c835402d-dc04-4212-a595-c23def40a067","triggerCount":0,"tags":[],"error":"The resource you are requesting could not be found"}